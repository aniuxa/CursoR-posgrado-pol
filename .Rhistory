ICE_2018 <- clean_names(ICE_2018)
ICE_2018$value<- ICE_2018$homicidios
mxstate_choropleth(ICE_2018,
title = "Tasa de homicidios")
knitr::opts_chunk$set(echo = TRUE)
g_bivariado <- g1 +  geom_bar(aes(fill = as_label(pb1)),
position="fill") # cada categoría "llena" a una unidad
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, readxl,haven, sjlabelled, foreign, janitor, srvyr, esquisse, Rcolorbrewer) #carga los paquetes necesarios para esta práctica
g1 +  geom_bar(aes(
fill = as_label(pb3)
)) # colorea la geometría
# Esto es equivalente
ecovid0420 %>%
ggplot(aes(as_label(pb3),
fill = as_label(pb3)
)
) + geom_bar()
g2<-ecovid0420 %>%
ggplot(aes(pb2))
g2 # imprime el lienzo
g2 + geom_histogram()
g2 + geom_density()
g_bivariado <- g1 +  geom_bar(aes(fill = as_label(pb1)),
position="fill") # cada categoría "llena" a una unidad
g_bivariado
g_bivariado +
g_bivariado + scale_fill_brewer(palette = "Dark2")
g_bivariado + scale_fill_brewer(palette = "Dark2") + theme_minimal()
# Paquetes
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, readxl,
haven, sjlabelled,
foreign, janitor, srvyr, esquisse, RColorBrewer) #carga los paquetes necesarios para esta práctica
# ==============================================================================
# Fecha: 2020-08-28
# Sesión 6 - No tenemos libreta
# Autoras: Ana Escoto y Mónica Lara
# ==============================================================================
# Paquetes                        ----------------------------------------------
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, readxl,
haven, sjlabelled,
foreign, janitor, srvyr,
esquisse, RColorBrewer) #carga los paquetes necesarios
# Un paquete en desarrollo        ----------------------------------------------
if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("diegovalle/mxmaps")
# Paquetes                        ----------------------------------------------
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, readxl,
haven, sjlabelled,
foreign, janitor, srvyr,
esquisse, RColorBrewer,
devtools) #carga los paquetes necesarios
1
# Paquetes                        ----------------------------------------------
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, readxl,
haven, sjlabelled,
foreign, janitor, srvyr,
esquisse, RColorBrewer,
devtools) #carga los paquetes necesarios
# Un paquete en desarrollo        ----------------------------------------------
#if (!require("devtools")) {
#  install.packages("devtools")
# }
#devtools::install_github("diegovalle/mxmaps")
library(mxmaps)
# Datos                   -----------------------------------------------
# índice de competitividad estatal (no internacional)
ICE_2018 <- read_excel("./datos/ICE_2018.xlsx", sheet = "para_importar")
ICE_2018 <- clean_names(ICE_2018) # limpia los nombres
#Iniciamos con un ggplot "scatter"
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_point()
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_text(aes(label=edo2))
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2)
) +
geom_point()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
shape=region2)
) +
geom_point()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() + facet_wrap(~region2)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() + facet_grid(.~region2)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() + facet_grid(region2~.)
data("df_mxstate") # carga la base estatal del paquete
data("df_mxstate") # carga la base estatal del paquete
df_mxstate$value <- df_mxstate$pop # paso esencial
glimpse(df_mxstate)
mxstate_choropleth(df_mxstate,
title = "Total población, por Estado")
ICE_2018$value<- ICE_2018$homicidios
mxstate_choropleth(ICE_2018,
title = "Tasa de homicidios")
mxstate_choropleth(ICE_2018,
title = "Tasa de homicidios") + theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() +
geom_smooth() +
facet_grid(region2~.)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(region2~.)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
size=costos_del_delito)) +
geom_text() +
geom_smooth(method="lm") +
theme_minimal()
# índice de competitividad estatal (no internacional)
ICE_2018 <- read_excel("./datos/ICE_2018.xlsx", sheet = "para_importar")
ICE_2018 <- clean_names(ICE_2018) # limpia los nombres
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2)) +
geom_text() +
geom_smooth(method="lm") + scale_fill_brewer(palette = "Dark2") +
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
size=costos_del_delito)) +
geom_text(aes(label=edo2)) +
geom_smooth(method="lm") +
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point(aes(size=costos_del_delito))
geom_text(aes(label=edo2)) +
geom_smooth(method="lm") +
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point(aes(size=costos_del_delito))+
geom_text(aes(label=edo2)) +
geom_smooth(method="lm") +
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point(aes(size=costos_del_delito))+
geom_smooth(method="lm") +
theme_minimal()
# Introducción de una cuarta variable cuanti
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2)) +
geom_point(aes(size=costos_del_delito))+
geom_smooth(method="lm") +
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2,
size=costos_del_delito)) +
geom_point()+
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2,
size=costos_del_delito)) +
geom_point()+
geom_label(aes(label=edo2),
check_overlap = TRUE)+
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2,
size=costos_del_delito)) +
geom_label(aes(label=edo2),
check_overlap = TRUE)+
theme_minimal()
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2,
size=costos_del_delito)) +
geom_text(aes(label=edo2),
check_overlap = TRUE)+
theme_minimal()
# geometría "label"
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_label(aes(label=edo2))
# Paquetes                        ----------------------------------------------
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, readxl,
haven, sjlabelled,
foreign, janitor, srvyr,
esquisse, RColorBrewer,
devtools) #carga los paquetes necesarios
# Un paquete en desarrollo        ----------------------------------------------
#if (!require("devtools")) {
#  install.packages("devtools")
# }
#devtools::install_github("diegovalle/mxmaps")
library(mxmaps)
# Datos                   -----------------------------------------------
# índice de competitividad estatal (no internacional)
ICE_2018 <- read_excel("./datos/ICE_2018.xlsx", sheet = "para_importar")
ICE_2018 <- clean_names(ICE_2018) # limpia los nombres
# Gráficos multivariados  -----------------------------------------------
#Iniciamos con un ggplot "scatter"
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_point()
# geometría "jitter"
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_jitter()
# geometría "text"
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_text(aes(label=edo2))
# geometría "label"
ICE_2018 %>%
ggplot(aes(homicidios,percepcion_de_seguridad)) +
geom_label(aes(label=edo2))
# Introducción de una tercera variable con color
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2)
) +
geom_point()
# Introducción de una tercera variable con "shape"
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
shape=region2)
) +
geom_point() # ojo, nos da un "warning"
# Introducción de una tercera variable con "facet"
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() + facet_wrap(~region2)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() + facet_grid(.~region2)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() +
facet_grid(region2~.)
# Smooth y múltiples geometrías
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(region2~.)
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2)) +
geom_text(aes(label=edo2)) +
geom_smooth(method="lm") + scale_fill_brewer(palette = "Dark2") +
theme_minimal()
# Introducción de una cuarta variable cuanti
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2)) +
geom_point(aes(size=costos_del_delito))+ # ojo
theme_minimal()
# Equivalente
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2,
size=costos_del_delito)) +
geom_point()+
theme_minimal()
# Agregaremos etiquetas
ICE_2018 %>%
ggplot(aes(x=homicidios,
y=percepcion_de_seguridad,
color=region2,
size=costos_del_delito)) +
geom_text(aes(label=edo2),
check_overlap = TRUE)+
theme_minimal()
# Mapas                   -----------------------------------------------
data("df_mxstate") # carga la base estatal del paquete
glimpse(df_mxstate)
# Cómo opera el paquete
df_mxstate$value <- df_mxstate$pop # paso esencial
glimpse(df_mxstate$region)
mxstate_choropleth(df_mxstate,
title = "Total población, por Estado")
# Mientras haya una variable de region estatal
ICE_2018$value<- ICE_2018$homicidios
mxstate_choropleth(ICE_2018,
title = "Tasa de homicidios")
mapa<-mxstate_choropleth(ICE_2018,
title = "Tasa de homicidios")
ggsave(plot=mapa, #objeto donde está el gráfico
device="png", # formato del gráfico
filename = "mapa.png") # nombre el archivo de salida
# lo guardará en nuestro directorio y en formato ".png" de imagen
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools)
## Insumos
path1<-"./datos/kawabata.epub" # formato epub
path2<-"./datos/lobo_antunes.pdf" #formato pdf
path3<-"./datos/amlo_abri.txt" #formato pdf
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools)
## Insumos
path1<-"./datos/kawabata.epub" # formato epub
path2<-"./datos/lobo_antunes.pdf" #formato pdf
path3<-"./datos/amlo_abri.txt" #formato pdf
udmodel <- udpipe_download_model(language = "spanish")  # esto trabaja con la estructura del español
x$data # esto muestra que aquí adentro está lo que queremos
epub_head(path1) # muestra lo primero
epub_meta(path1) # muestra el meta-data del libro
x <- epub(path1) # Importa todo el libro en el objeto x, pero no queremos todo
x
class(x)
x
x$data
View(x)
glimpse(x$data)
names(x$data)
View(x$data)
x$data$section
epub_100<-x$data[[1]]
View(epub_100)
epub_head(path1) # muestra lo primero
epub_meta(path1) # muestra el meta-data del libro
x <- epub(path1) # Importa todo el libro en el objeto x, pero no queremos todo
x
class(x)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools)
## Insumos
path1<-"./datos/kawabata.epub" # formato epub
path2<-"./datos/lobo_antunes.pdf" #formato pdf
path3<-"./datos/amlo_abri.txt" #formato pdf
udmodel <- udpipe_download_model(language = "spanish")  # esto trabaja con la estructura del español
epub_head(path1) # muestra lo primero
epub_meta(path1) # muestra el meta-data del libro
x <- epub(path1) # Importa todo el libro en el objeto x, pero no queremos todo
x
class(x)
epub_kaw<-x$data[[1]] # Nos quedamos con esa base de datos
epub_kaw
View(epub_kaw)
x$data # esto muestra que aquí adentro está lo que queremos
epub_kaw<-x$data[[1]] # Nos quedamos con esa base de datos
epub_kaw<-epub_kaw[c(1,7:15), ]  # Nos quedamos con las líneas donde están los capítulos
kawabata<-udpipe(x = paste(epub_kaw$text), #paste nos asegura que se pegue como caracter
object=udmodel) #"tokeniza" el texto
stats<- kawabata %>%
filter(upos=="NOUN")
stats.freq <- txt_freq(stats$token)
stats.freq$key <- factor(stats.freq$key, levels = rev(stats.freq$key)) # ordena
stats.freq[1:25,] %>%
ggplot(aes(x=key, y=freq)) +geom_bar(stat="identity") +
coord_flip() + labs(y="Frecuencia", x="Sustantivo") + theme_minimal()
set.seed(42) # tiene un elemento aleatorio
stats.freq[1:25,] %>%
ggplot(aes(label=key, size=freq)) +  geom_text_wordcloud() +
theme_minimal()
stats.freq[1:25,] %>%
ggplot(
aes(
label =key, size = freq,
color = factor(sample.int(15, nrow(stats.freq[1:25,]), replace = TRUE))
)
) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 12) +
theme_minimal()
set.seed(1234)
paleta_color<-wes_palette(n=5,
name="Darjeeling1",
type="continuous")
set.seed(1234)
wordcloud(words = stats.freq$key, freq = stats.freq$freq,
min.freq = 5,
max.words=200,
random.order=FALSE)
set.seed(1234)
wordcloud(words = stats.freq$key, freq = stats.freq$freq,
min.freq = 5,
max.words=200,
random.order=FALSE)
set.seed(1234)
wordcloud(words = stats.freq$key, freq = stats.freq$freq,
min.freq = 5,
max.words=200,
random.order=FALSE,
colors=paleta_color)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools, wes_anderson)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools, wesanderson)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools, wesanderson)
set.seed(1234)
paleta_color<-wes_palette(n=5,
name="Darjeeling1",
type="continuous")
wordcloud(words = stats.freq$key, freq = stats.freq$freq,
min.freq = 5,
max.words=200,
random.order=FALSE,
colors=paleta_color)
rm(list=ls()) ### borra objetos en el ambiente
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, epubr, pdftools, wesanderson)
udmodel <- udpipe_download_model(language = "spanish")  # esto trabaja con la estructura del español
## Insumos
path1<-"./datos/kawabata.epub" # formato epub
path2<-"./datos/lobo_antunes.pdf" #formato pdf
path3<-"./datos/amlo_abri.txt" #formato pdf
epub_head(path1) # muestra lo primero
epub_meta(path1) # muestra el meta-data del libro
x <- epub(path1) # Importa todo el libro en el objeto x, pero no queremos todo
x
class(x)
x$data # esto muestra que aquí adentro está lo que queremos
epub_kaw<-x$data[[1]] # Nos quedamos con esa base de datos
epub_kaw<-epub_kaw[c(1,7:15), ]  # Nos quedamos con las líneas donde están los capítulos
kawabata<-udpipe(x = paste(epub_kaw$text), #paste nos asegura que se pegue como caracter
object=udmodel) #"tokeniza" el texto
